140
141
153
167
179
185
197
200
201
209
231
237
243
251
257
258
273
299
309
335
345
357
361
362
363
371
377
381
385
386
387
411
417
425
426
435
447
455
467
468
489
497
503
507
515
521
543
551
557
558
573
591
599
600
609
615
641
647
659
671
675
683
687
699
703
704
705
713
729
734
735
743
753
761
767
771
777
783
791
792
793
794
795
797
798")
v = strsplit("29
35
41
42
42
43
57
71
75
81
99
123
129
135
139
140
141
153
167
179
185
197
200
201
209
231
237
243
251
257
258
273
299
309
335
345
357
361
362
363
371
377
381
385
386
387
411
417
425
426
435
447
455
467
468
489
497
503
507
515
521
543
551
557
558
573
591
599
600
609
615
641
647
659
671
675
683
687
699
703
704
705
713
729
734
735
743
753
761
767
771
777
783
791
792
793
794
795
797
798",
split="\n")
v
v = v[[1]]
v
hist(v)
v = as.numeric(v)
hist(v)
hist(v, breaks = 800)
hist(v, breaks = 80)
hist(v, breaks = 40)
plot(v)
v = strsplit("17
29
30
31
33
41
42
53
57
63
64
65
75
80
81
89
90
95
99
107
113
119
125
131
137
353
361
362
363
371
372
373
374
375
376
377
381
387
669
755
765
772
773
774
775
776
777
783
791
797
",
split="\n")
v = v[[1]]
v = as.numeric(v)
hist(v, breaks = 40)
plot(v)
v = strsplit("29
30
31
33
89
95
353
362
363
371
372
377
381
387
765
773
775
776
777
783
",
split="\n")
v = v[[1]]
v = as.numeric(v)
hist(v, breaks = 40)
plot(v)
v = strsplit("29
30
33
371
377
381
387
775
776
777
",
split="\n")
v = v[[1]]
v = as.numeric(v)
hist(v, breaks = 40)
plot(v)
v = strsplit("41
42
43
197
237
273
299
363
381
387
417
503
507
515
521
551
557
743
761
797
",
split="\n")
v = v[[1]]
v = as.numeric(v)
hist(v, breaks = 40)
plot(v)
v = strsplit("20
29
50
55
188
258
302
337
344
345
346
454
461
482
491
531
601
741
755
785
",
split="\n")
v = v[[1]]
v = as.numeric(v)
hist(v, breaks = 40)
plot(v)
v = strsplit("454
460
461
481
482
491
493
494
495
496
505
509
510
516
517
522
523
524
530
531
",
split="\n")
v = v[[1]]
v = as.numeric(v)
hist(v, breaks = 40)
hist(v, breaks = 40)
plot(v)
v = strsplit("23
31
32
43
44
61
203
211
212
253
269
325
365
370
371
413
743
751
752
763
",
split="\n")
v = v[[1]]
v = as.numeric(v)
hist(v, breaks = 40)
plot(v)
v = strsplit("1
6
41
48
151
156
481
701
715
716",
split="\n")
v = v[[1]]
v = as.numeric(v)
hist(v, breaks = 40)
plot(v)
library(quantmod)
getSymbols("AAPL")
end<- as.Date(Sys.time())
start<-as.Date("2011-01-01")
getSymbols("AAPL" , src = "google", from = start, to = end)
getSymbols("AAPL" , from = start, to = end)
getSymbols("AAPL" , src = "yahoo", from = start, to = end)
install.packages('quantmod')
install.packages("quantmod")
library(quantmod)
quantmod("AAPL")
getSymbols("AAPL")
getSymbols("AAPL", src="yahoo")
require(Quandl)
install.packages('Quandl')
install.packages("Quandl")
plot(1:10, 1:10)
sym <- 'MMM'
paste0("WIKI/", sym, ".8"),
paste0("WIKI/", sym, ".9"),
paste0("WIKI/", sym, ".10"),
paste0("WIKI/", sym, ".11"),
paste0("WIKI/", sym, ".12")
c(
paste0("WIKI/", sym, ".8"),
paste0("WIKI/", sym, ".9"),
paste0("WIKI/", sym, ".10"),
paste0("WIKI/", sym, ".11"),
paste0("WIKI/", sym, ".12")
)
library(Quandl)
#qundl API
quandl_api = "fU1GbTWQWxmCxofD7sxt"
#add my key
Quandl.api_key(quandl_api)
quandl_get <- function(sym) {
require(devtools)
require(Quandl)
# create a vector with all lines
tryCatch(Quandl(c(
paste0("WIKI/", sym, ".1"),
paste0("WIKI/", sym, ".2"),
paste0("WIKI/", sym, ".3"),
paste0("WIKI/", sym, ".4"),
paste0("WIKI/", sym, ".5"),
paste0("WIKI/", sym, ".6"),
paste0("WIKI/", sym, ".7"),
paste0("WIKI/", sym, ".8"),
paste0("WIKI/", sym, ".9"),
paste0("WIKI/", sym, ".10"),
paste0("WIKI/", sym, ".11"),
paste0("WIKI/", sym, ".12")
)
))
}
quandl_get('AAPL')
AAPL <- quandl_get('AAPL')
View(AAPL)
df = read.csv('~/Desktop/wrds-taq-connect/data/CQM_20161003.csv')
sum(df$sym_root == 'INSD')
sum(df$sym_root == 'INSD')
sum(df$sym_root == 'INSD')
sum(df$sym_root == 'INSD')
sum(df$sym_root == 'GLT')
sum(df$sym_root == 'RWLK')
sum(df$sym_root == 'PBI')
sum(df$sym_root == 'BKD')
sum(df$sym_root == 'HZO')
sum(df$sym_root == 'PLOW')
sum(df$sym_root == 'UGAZ')
sum(df$sym_root == 'TRNC')
sum(df$sym_root == 'LMNX')
df = read.csv('~/Desktop/corporate_account_transaction_history_2017.csv')
df
View(df)
class(df$Amount)
df = read.csv('~/Desktop/corporate_account_transaction_history_2017.csv', stringsAsFactors = False)
df = read.csv('~/Desktop/corporate_account_transaction_history_2017.csv', stringsAsFactors = FALSE)
class(df$Amount)
grepl('(', '(sdfgsdfg)')
grepl('\\(', '(sdfgsdfg)')
df = read.csv('~/Desktop/corporate_account_transaction_history_2017.csv', stringsAsFactors = FALSE)
class(df$Amount)
df <- df[grepl('\\(', df$Amount), ]
df
df <- df[!grepl('OVERDRAFT', df$Description), ]
df
df <- df[!grepl('Upwork', df$Text), ]
df
df <- df[!grepl('Verizon', df$Text), ]
df <- df[!grepl('VERIZON', df$Text), ]
df <- df[!grepl('ERIE', df$Text), ]
df <- df[!grepl('MAINTENENCE', df$Description), ]
df <- df[!grepl('MAINTENANCE', df$Description), ]
df <- df[!grepl('CUST INITIATED', df$Description), ]
df <- df[!grepl('DEBIT MEMO', df$Description), ]
install.packages('ggplot2')
library(knitr); setwd('/home/cconlan/Desktop/utils/math_md_to_pdf/samples'); knit('some_markdown_sample.md', output='some_markdown_sample.utf8.md')
